{"version":3,"file":"static/js/439.54cd17c0.chunk.js","mappings":"yQAEaA,EAAWC,EAAAA,GAAAA,GAAH,2JAQRC,EAASD,EAAAA,GAAAA,EAAH,4CAINE,EAASF,EAAAA,GAAAA,EAAH,yF,SCXJ,SAASG,EAAT,GAA2C,IAApBC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,QAC5C,OACE,UAACN,EAAD,YACE,UAACG,EAAD,sBAAiBE,MACjB,SAACH,EAAD,UAASI,MAGd,CCRM,IAAMC,EAAcN,EAAAA,GAAAA,GAAH,+DAKXO,EAAYP,EAAAA,GAAAA,EAAH,8DCAP,SAASQ,IACtB,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAkBC,OAAOH,GAmB/B,OAjBAI,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GACbI,MAAK,SAAAC,GACJR,GAAgB,OAAIQ,EAASC,KAAKC,SACnC,IACAC,OAAM,SAAUC,GACXA,EAAMJ,UACRK,EAAAA,EAAAA,GAAiBD,EAAMJ,SAASC,MACvBG,EAAME,SACfD,EAAAA,EAAAA,GAAiB,0BAEjBA,EAAAA,EAAAA,GAAiB,QAASD,EAAMG,QAEnC,IACAC,SACJ,GAAE,CAACb,KAGF,8BAC2B,IAAxBJ,EAAakB,QACZ,SAACtB,EAAD,UACGI,EAAamB,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAI1B,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC/B,OAAO,SAACF,EAAD,CAAsBC,OAAQA,EAAQC,QAASA,GAA7ByB,EAC1B,OAGH,SAACvB,EAAD,wDAIP,C,+LCxCDwB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8FACQF,EAAAA,EAAAA,IAAA,qCAAwCC,IADhD,0GAIA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,iFACQJ,EAAAA,EAAAA,IAAA,+BACaC,EADb,kBAC8BG,IAFtC,0GAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BxB,GAA/B,iFACQmB,EAAAA,EAAAA,IAAA,iBAAoBnB,EAApB,oBAAuCoB,IAD/C,0GAIA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BzB,GAA/B,iFACQmB,EAAAA,EAAAA,IAAA,iBAAoBnB,EAApB,4BAA+CoB,IADvD,0GAIA,SAAef,EAAtB,+CAAO,OAAP,oBAAO,WAA+BL,GAA/B,iFACQmB,EAAAA,EAAAA,IAAA,iBAAoBnB,EAApB,4BAA+CoB,IADvD,0G,yFCrBMR,EAAmB,SAAUc,GACxC,OAAOC,EAAAA,EAAAA,IAAMD,EAAM,CACjBE,MAAO,CACLC,SAAU,OACVC,OAAQ,oBACRC,QAAS,OACTC,MAAO,WAETC,SAAU,aAEb,EAEYC,EAAkB,SAAUR,GACvC,OAAOC,EAAAA,EAAAA,IAAMD,EAAM,CACjBE,MAAO,CACLC,SAAU,OACVC,OAAQ,oBACRC,QAAS,OACTC,MAAO,WAETC,SAAU,aAEb,C","sources":["components/ReviewsItem/ReviewsItem.styled.jsx","components/ReviewsItem/ReviewsItem.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/axios-api.js","services/toast-notify.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  padding: 10px 10px;\n  border-radius: 5px;\n  background-color: #f3f1f1;\n  margin-bottom: 10px;\n  border: 1px dotted #999898;\n`;\n\nexport const Review = styled.p`\n  font-size: 14px;\n`;\n\nexport const Author = styled.p`\n  font-size: 14px;\n  font-weight: 600;\n  margin-bottom: 10px;\n`;\n","import { ListItem, Author, Review } from './ReviewsItem.styled';\nimport PropTypes from 'prop-types';\n\nexport default function ReviewsItem({ author, content }) {\n  return (\n    <ListItem>\n      <Author>Author: {author}</Author>\n      <Review>{content}</Review>\n    </ListItem>\n  );\n}\n\nReviewsItem.propTypes = {\n  author: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  list-style: none;\n  padding: 10px;\n`;\n\nexport const NoReviews = styled.p`\n  padding: 20px;\n  font-size: 16px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieReviews } from 'services/axios-api';\nimport { toastNotifyError } from 'services/toast-notify';\nimport ReviewsItem from 'components/ReviewsItem';\nimport { ReviewsList, NoReviews } from './Reviews.styled';\n\nexport default function Reviews() {\n  const [movieReviews, setMovieReviews] = useState([]);\n  const { movieId } = useParams();\n  const movieIdToNumber = Number(movieId);\n\n  useEffect(() => {\n    getMovieReviews(movieIdToNumber)\n      .then(response => {\n        setMovieReviews([...response.data.results]);\n      })\n      .catch(function (error) {\n        if (error.response) {\n          toastNotifyError(error.response.data);\n        } else if (error.request) {\n          toastNotifyError('XMLHttpRequest failed');\n        } else {\n          toastNotifyError('Error', error.message);\n        }\n      })\n      .finally();\n  }, [movieIdToNumber]);\n\n  return (\n    <>\n      {movieReviews.length !== 0 ? (\n        <ReviewsList>\n          {movieReviews.map(({ id, author, content }) => {\n            return <ReviewsItem key={id} author={author} content={content} />;\n          })}\n        </ReviewsList>\n      ) : (\n        <NoReviews>We don`t have any reviews for this movie</NoReviews>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'fbee7941f117d258bba2ad0706e433a4';\n\nexport async function getTrendingMovies() {\n  return await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n}\n\nexport async function searchMovie(searchQuery) {\n  return await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${searchQuery}`\n  );\n}\n\nexport async function getMovieDetails(movieId) {\n  return await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n}\n\nexport async function getMovieCredits(movieId) {\n  return await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n}\n\nexport async function getMovieReviews(movieId) {\n  return await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n}\n","import toast from 'react-hot-toast';\n\nexport const toastNotifyError = function (text) {\n  return toast(text, {\n    style: {\n      fontSize: '16px',\n      border: '1px solid #be1b16',\n      padding: '10px',\n      color: '#be1b16',\n    },\n    position: 'top-right',\n  });\n};\n\nexport const toastNotifyInfo = function (text) {\n  return toast(text, {\n    style: {\n      fontSize: '16px',\n      border: '1px solid #020071',\n      padding: '10px',\n      color: '#020071',\n    },\n    position: 'top-right',\n  });\n};\n"],"names":["ListItem","styled","Review","Author","ReviewsItem","author","content","ReviewsList","NoReviews","Reviews","useState","movieReviews","setMovieReviews","movieId","useParams","movieIdToNumber","Number","useEffect","getMovieReviews","then","response","data","results","catch","error","toastNotifyError","request","message","finally","length","map","id","axios","API_KEY","getTrendingMovies","searchMovie","searchQuery","getMovieDetails","getMovieCredits","text","toast","style","fontSize","border","padding","color","position","toastNotifyInfo"],"sourceRoot":""}