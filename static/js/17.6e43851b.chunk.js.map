{"version":3,"file":"static/js/17.6e43851b.chunk.js","mappings":"8NAEaA,EAAOC,EAAAA,GAAAA,KAAH,sJAQJC,EAAQD,EAAAA,GAAAA,MAAH,oLASLE,EAASF,EAAAA,GAAAA,OAAH,wH,kBCfJ,SAASG,IACtB,OAA4BC,EAAAA,EAAAA,MAAnBC,GAAT,eAYA,OACE,UAACN,EAAD,CAAMO,SAXiB,SAAAC,GACvBA,EAAEC,iBAEsC,IAApCD,EAAEE,OAAO,GAAGC,MAAMC,OAAOC,OAI7BP,EAAgB,CAAEQ,MAAON,EAAEE,OAAO,GAAGC,SAHnCI,EAAAA,EAAAA,GAAgB,uCAInB,EAGC,WACE,SAACb,EAAD,CAAOc,KAAK,UACZ,SAACb,EAAD,CAAQa,KAAK,SAAb,sBAGL,C,4BCrBYC,EAAOhB,EAAAA,GAAAA,GAAH,sNCCJiB,EAAWjB,EAAAA,GAAAA,GAAH,gDAGRkB,GAAWlB,EAAAA,EAAAA,IAAOmB,EAAAA,GAAPnB,CAAH,sB,SCFN,SAASoB,EAAT,GAAgD,IAAdC,EAAa,EAAbA,GAAIC,EAAS,EAATA,MAC7CC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACP,EAAD,WACE,SAACC,EAAD,CAAUO,GAAE,UAAKJ,GAAMK,MAAO,CAAEC,KAAMJ,GAAtC,SACGD,KAIR,CCVc,SAASM,EAAT,GAAyC,IAAXC,EAAU,EAAVA,OAC3C,OACE,SAACb,EAAD,iBACGa,QADH,IACGA,OADH,EACGA,EAAQC,KAAI,YAAoB,IAAjBT,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MAClB,OAAO,SAACF,EAAD,CAAiCC,GAAIA,EAAIC,MAAOA,GAAnBD,EACrC,KAGN,CCLc,SAASU,IAAU,IAAD,EAC/B,GAA4CC,EAAAA,EAAAA,UAAS,MAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAEA,GAAuB9B,EAAAA,EAAAA,MACjB+B,EAAS,WADf,eAC+BC,IAAI,gBAApB,QAAgC,GA0B/C,OAxBAC,EAAAA,EAAAA,YAAU,WACU,KAAdF,IAIJG,EAAAA,EAAAA,IAAYH,GACTI,MAAK,SAAAC,GACiC,IAAjCA,EAASC,KAAKC,QAAQ9B,SACxBE,EAAAA,EAAAA,GAAgB,iCAElBoB,EAAkBM,EAASC,KAAKC,QACjC,IACAC,OAAM,SAAUC,GACXA,EAAMJ,UACRK,EAAAA,EAAAA,GAAiBD,EAAMJ,SAASC,MACvBG,EAAME,SACfD,EAAAA,EAAAA,GAAiB,0BAEjBA,EAAAA,EAAAA,GAAiB,QAASD,EAAMG,QAEnC,IACAC,SACJ,GAAE,CAACb,KAGF,6BACE,SAAChC,EAAD,IACC8B,GAA4C,IAA1BA,EAAerB,SAChC,SAACgB,EAAD,CAAoBC,OAAQI,MAInC,C,+LC3CDgB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8FACQF,EAAAA,EAAAA,IAAA,qCAAwCC,IADhD,0GAIA,SAAeZ,EAAtB,+CAAO,OAAP,oBAAO,WAA2Bc,GAA3B,iFACQH,EAAAA,EAAAA,IAAA,+BACaC,EADb,kBAC8BE,IAFtC,0GAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,iFACQL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,oBAAuCJ,IAD/C,0GAIA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,iFACQL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,4BAA+CJ,IADvD,0GAIA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,iFACQL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,4BAA+CJ,IADvD,0G,yFCrBML,EAAmB,SAAUY,GACxC,OAAOC,EAAAA,EAAAA,IAAMD,EAAM,CACjBE,MAAO,CACLC,SAAU,OACVC,OAAQ,oBACRC,QAAS,OACTC,MAAO,WAETC,SAAU,aAEb,EAEYlD,EAAkB,SAAU2C,GACvC,OAAOC,EAAAA,EAAAA,IAAMD,EAAM,CACjBE,MAAO,CACLC,SAAU,OACVC,OAAQ,oBACRC,QAAS,OACTC,MAAO,WAETC,SAAU,aAEb,C","sources":["components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","components/SearchedMoviesList/SearchedMoviesList.styled.jsx","components/SearchedMoviesListItem/SearchedMoviesListItem.styled.jsx","components/SearchedMoviesListItem/SearchedMoviesListItem.jsx","components/SearchedMoviesList/SearchedMoviesList.jsx","pages/Movies/Movies.jsx","services/axios-api.js","services/toast-notify.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 10px 32px 8px 8px;\n  border-radius: 1px;\n  outline: transparent;\n  border-radius: 10px;\n  border: 1px solid #999999;\n  margin-right: 10px;\n`;\n\nexport const Button = styled.button`\n  padding: 9px 15px;\n  border-radius: 10px;\n  border: 1px solid #999999;\n  cursor: pointer;\n`;\n","import { Form, Input, Button } from './SearchBox.styled';\nimport { useSearchParams } from 'react-router-dom';\nimport { toastNotifyInfo } from 'services/toast-notify';\n\nexport default function SearchBox() {\n  const [, setSearchParams] = useSearchParams();\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n\n    if (e.target[0].value.trim().length === 0) {\n      toastNotifyInfo('Please, specify your search criteria');\n      return;\n    }\n    setSearchParams({ query: e.target[0].value });\n  };\n\n  return (\n    <Form onSubmit={handleSubmitForm}>\n      <Input type=\"text\" />\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n}\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  font-size: 20px;\n  background-color: #ecebeb;\n  box-shadow: 2px 4px 7px #807f7f;\n  padding: 20px;\n  border: 1px dotted #807f7f;\n  border-radius: 10px;\n  list-style: inside decimal;\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const ListItem = styled.li`\n  margin-bottom: 10px;\n`;\nexport const LinkItem = styled(Link)``;\n","import { ListItem, LinkItem } from './SearchedMoviesListItem.styled';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport default function SearchedMoviesListItem({ id, title }) {\n  const location = useLocation();\n\n  return (\n    <ListItem>\n      <LinkItem to={`${id}`} state={{ from: location }}>\n        {title}\n      </LinkItem>\n    </ListItem>\n  );\n}\n\nSearchedMoviesListItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import { List } from './SearchedMoviesList.styled';\nimport SearchedMoviesListItem from 'components/SearchedMoviesListItem';\nimport PropTypes from 'prop-types';\n\nexport default function SearchedMoviesList({ movies }) {\n  return (\n    <List>\n      {movies?.map(({ id, title }) => {\n        return <SearchedMoviesListItem key={id} id={id} title={title} />;\n      })}\n    </List>\n  );\n}\n\nSearchedMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object),\n};\n","import { useSearchParams } from 'react-router-dom';\nimport SearchBox from '../../components/SearchBox';\nimport { searchMovie } from 'services/axios-api';\nimport { useState, useEffect } from 'react';\nimport { toastNotifyError, toastNotifyInfo } from 'services/toast-notify';\nimport SearchedMoviesList from 'components/SearchedMoviesList';\n\nexport default function Movies() {\n  const [searchedMovies, setSearchedMovies] = useState(null);\n\n  const [searchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (movieName === '') {\n      return;\n    }\n\n    searchMovie(movieName)\n      .then(response => {\n        if (response.data.results.length === 0) {\n          toastNotifyInfo('No data found on your request');\n        }\n        setSearchedMovies(response.data.results);\n      })\n      .catch(function (error) {\n        if (error.response) {\n          toastNotifyError(error.response.data);\n        } else if (error.request) {\n          toastNotifyError('XMLHttpRequest failed');\n        } else {\n          toastNotifyError('Error', error.message);\n        }\n      })\n      .finally();\n  }, [movieName]);\n\n  return (\n    <main>\n      <SearchBox />\n      {searchedMovies && searchedMovies.length !== 0 && (\n        <SearchedMoviesList movies={searchedMovies} />\n      )}\n    </main>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'fbee7941f117d258bba2ad0706e433a4';\n\nexport async function getTrendingMovies() {\n  return await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n}\n\nexport async function searchMovie(searchQuery) {\n  return await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${searchQuery}`\n  );\n}\n\nexport async function getMovieDetails(movieId) {\n  return await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n}\n\nexport async function getMovieCredits(movieId) {\n  return await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n}\n\nexport async function getMovieReviews(movieId) {\n  return await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n}\n","import toast from 'react-hot-toast';\n\nexport const toastNotifyError = function (text) {\n  return toast(text, {\n    style: {\n      fontSize: '16px',\n      border: '1px solid #be1b16',\n      padding: '10px',\n      color: '#be1b16',\n    },\n    position: 'top-right',\n  });\n};\n\nexport const toastNotifyInfo = function (text) {\n  return toast(text, {\n    style: {\n      fontSize: '16px',\n      border: '1px solid #020071',\n      padding: '10px',\n      color: '#020071',\n    },\n    position: 'top-right',\n  });\n};\n"],"names":["Form","styled","Input","Button","SearchBox","useSearchParams","setSearchParams","onSubmit","e","preventDefault","target","value","trim","length","query","toastNotifyInfo","type","List","ListItem","LinkItem","Link","SearchedMoviesListItem","id","title","location","useLocation","to","state","from","SearchedMoviesList","movies","map","Movies","useState","searchedMovies","setSearchedMovies","movieName","get","useEffect","searchMovie","then","response","data","results","catch","error","toastNotifyError","request","message","finally","axios","API_KEY","getTrendingMovies","searchQuery","getMovieDetails","movieId","getMovieCredits","getMovieReviews","text","toast","style","fontSize","border","padding","color","position"],"sourceRoot":""}