{"version":3,"file":"static/js/762.31888564.chunk.js","mappings":"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","sources":["components/CastItem/CastItem.styled.jsx","components/CastItem/CastItem.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/axios-api.js","services/toast-notify.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  width: 150px;\n  height: 270px;\n  text-align: center;\n  padding: 2px;\n  border-radius: 5px;\n  background-color: #c2baba;\n`;\n\nexport const Character = styled.p`\n  font-size: 14px;\n`;\n\nexport const Name = styled.p`\n  font-size: 14px;\n  font-weight: 500;\n  margin-bottom: 5px;\n`;\n\nexport const Photo = styled.img`\n  width: 150px;\n  height: 75%;\n  margin-bottom: 10px;\n  object-fit: cover;\n`;\n","import { ListItem, Character, Name, Photo } from './CastItem.styled';\nimport PropTypes from 'prop-types';\n\nexport default function CastItem({ name, profile_path, character }) {\n  const photo = profile_path\n    ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n    : 'https://i.ibb.co/yQNvgQ7/1231313.jpg';\n\n  return (\n    <ListItem>\n      <Photo src={photo} alt=\"\" />\n      <Name>{name}</Name>\n      <Character>Character: {character}</Character>\n    </ListItem>\n  );\n}\n\nCastItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  profile_path: PropTypes.string,\n  character: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  column-gap: 20px;\n  row-gap: 20px;\n  list-style: none;\n  padding: 10px;\n`;\n\nexport const NoCast = styled.p`\n  padding: 20px;\n  font-size: 16px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieCredits } from 'services/axios-api';\nimport { toastNotifyError } from 'services/toast-notify';\nimport CastItem from 'components/CastItem';\nimport { CastList, NoCast } from './Cast.styled';\n\nexport default function Cast() {\n  const [movieCast, setMovieCast] = useState([]);\n  const { movieId } = useParams();\n  const movieIdToNumber = Number(movieId);\n\n  useEffect(() => {\n    getMovieCredits(movieIdToNumber)\n      .then(response => {\n        const casts = response.data.cast;\n        const castsId = casts.map(cast => cast.id);\n        const castSet = Array.from(new Set(castsId));\n        let newCast = [];\n        castSet.forEach(el => {\n          newCast.push(casts.find(cast => cast.id === el));\n        });\n\n        setMovieCast(newCast);\n      })\n      .catch(function (error) {\n        if (error.response) {\n          toastNotifyError(error.response.data);\n        } else if (error.request) {\n          toastNotifyError('XMLHttpRequest failed');\n        } else {\n          toastNotifyError('Error', error.message);\n        }\n      })\n      .finally();\n  }, [movieIdToNumber]);\n\n  return (\n    <>\n      {movieCast.length !== 0 ? (\n        <CastList>\n          {movieCast.map(({ id, name, profile_path, character }) => {\n            return (\n              <CastItem\n                key={id}\n                name={name}\n                profile_path={profile_path}\n                character={character}\n              />\n            );\n          })}\n        </CastList>\n      ) : (\n        <NoCast>There is no information about casts in this movie</NoCast>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'fbee7941f117d258bba2ad0706e433a4';\n\nexport async function getTrendingMovies() {\n  return await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n}\n\nexport async function searchMovie(searchQuery) {\n  return await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${searchQuery}`\n  );\n}\n\nexport async function getMovieDetails(movieId) {\n  return await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n}\n\nexport async function getMovieCredits(movieId) {\n  return await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n}\n\nexport async function getMovieReviews(movieId) {\n  return await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n}\n","import toast from 'react-hot-toast';\n\nexport const toastNotifyError = function (text) {\n  return toast(text, {\n    style: {\n      fontSize: '16px',\n      border: '1px solid #be1b16',\n      padding: '10px',\n      color: '#be1b16',\n    },\n    position: 'top-right',\n  });\n};\n\nexport const toastNotifyInfo = function (text) {\n  return toast(text, {\n    style: {\n      fontSize: '16px',\n      border: '1px solid #020071',\n      padding: '10px',\n      color: '#020071',\n    },\n    position: 'top-right',\n  });\n};\n"],"names":["ListItem","styled","Character","Name","Photo","CastItem","name","profile_path","character","photo","src","alt","CastList","NoCast","Cast","useState","movieCast","setMovieCast","movieId","useParams","movieIdToNumber","Number","useEffect","getMovieCredits","then","response","casts","data","cast","castsId","map","id","castSet","Array","from","Set","newCast","forEach","el","push","find","catch","error","toastNotifyError","request","message","finally","length","axios","API_KEY","getTrendingMovies","searchMovie","searchQuery","getMovieDetails","getMovieReviews","text","toast","style","fontSize","border","padding","color","position","toastNotifyInfo"],"sourceRoot":""}